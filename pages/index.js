import Web3 from "web3";
import Head from "next/head";
import Image from "next/image";
import { useQuery, useMutation, useQueryClient } from "react-query";
import styles from "../styles/Home.module.css";
import getInstance from "./contracts/getInstance";

export default function Home(props) {
    const { accounts, contracts } = props;
    const queryClient = useQueryClient();

    const contract = getInstance();

    const { data, isLoading } = useQuery(
        ["MyUint"],
        async () => await contract.methods.myUint().call()
    );

    const mutation = useMutation(
        (number) =>
            contract.methods.setMyUint(number).send({ from: accounts[0] }),
        {
            onSuccess: () => {
                queryClient.invalidateQueries("MyUint");
            },
        }
    );

    return (
        <div className={styles.container}>
            <Head>
                <title>My Contract Interaction</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>
                    Contract <a>Interaction!</a>
                </h1>

                {!isLoading ? <h2>{data}</h2> : null}
                <button onClick={() => mutation.mutate(20)}>
                    Set My UINT to 20
                </button>

                <button onClick={() => mutation.mutate(40)}>
                    Set My UINT to 40
                </button>
            </main>

            <footer className={styles.footer}>
                <a target="_blank" rel="noopener noreferrer">
                    Powered by{" "}
                    <span className={styles.logo}>
                        <Image
                            src="/vercel.svg"
                            alt="Vercel Logo"
                            width={72}
                            height={16}
                        />
                    </span>
                </a>
            </footer>
        </div>
    );
}

export async function getStaticProps() {
    const web3 = new Web3("http://127.0.0.1:8545");

    const contract = new web3.eth.Contract(
        [
            {
                inputs: [
                    {
                        internalType: "uint256",
                        name: "_myuint",
                        type: "uint256",
                    },
                ],
                name: "setMyUint",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function",
            },
            {
                inputs: [],
                name: "myUint",
                outputs: [
                    {
                        internalType: "uint256",
                        name: "",
                        type: "uint256",
                    },
                ],
                stateMutability: "view",
                type: "function",
            },
        ],
        "0x1058B9B1859cdD3ed872e15C9ce88F533a80B00B"
    );

    const accounts = await web3.eth.getAccounts();
    const uint = await contract.methods.myUint().call();

    return {
        props: {
            accounts,
            contracts: {
                MyContract: {
                    methods: {
                        myUint: uint,
                    },
                },
            },
        },
    };
}
